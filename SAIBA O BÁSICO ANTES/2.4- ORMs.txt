https://www.devmedia.com.br/orm-object-relational-mapper/19056
https://www.devmedia.com.br/orm-object-relational-mapping-revista-easy-net-magazine-28/27158#funciona

#O QUE É#

ORM (Object Relational Mapper) é uma técnica de mapeamento objeto relacional que permite fazer uma relação dos objetos c os dados q os msms representam.


#COMO FUNCIONA#

Tudo começa entre dois mundos: o relacional e o orientado a objetos.
No mundo relacional prevalecem princípios matemáticos c a finalidade de armazenar e gerenciar corretamente os dados, de forma segura e se trabalha c a 
linguagem SQL q é utilizada p dizer o banco de dados “O QUE?” fazer e não como fazer.

Já no mundo orientado a objetos trabalhamos c classes e métodos, ou seja, trabalhamos fundamentados na engenharia de software e seus princípios q nos dizem 
“COMO” fazer. O ORM é justamente, a ponte entre estes dois mundos, ou seja, é ele quem vai permitir que você armazene os seus objetos no banco de dados.
Para isto precisamos fazer um mapeamento dos seus objetos p as tabelas do banco de dados.

Ele faz o mapeamento da sua classe para o banco de dados e cada ORM tem suas particularidades para gerar o SQL referente a inserção do objeto q corresponde 
a uma tabela no banco de dados e realizar a operação. Utilizando um ORM, tb se ganha produtividade, pois deixa-se de escrever os comando SQL p deixar q o 
próprio ORM, faça isto por você.


#CURIOSIDADES#

Os principais ORMs que trabalham com o .NET são o Entity Framework e NHibernate mas estes não são os únicos. A primeira tentativa de ORM da Microsoft no .NET foi o LinqToSQL, que ainda é usado por muita pessoas mas que aos poucos foi sendo substituído pelo Entity Framework. Na versão 4 do .NET a Microsoft anunciou que iria descontinuar o LinqToSql, tornando o Entity Framework a opção nativa para ORM.
Porém, o NHibernate ainda possui uma consideravel preferência por possuir uma comunidade ativa e por suportar mais escolhas de bancos de dados do que o Entity. A conversa sobre performace pode ser esquecida a partir da versão 5 do Entity Framework quando a performace se equiparou entre eles.

Além desses dois há vários outros ORMs, como por exemplo podemos citar:

SubSonic, que pode ser o terceiro framework mais famoso e usado, com uma comunidade ativa, gratuito, com suporte a códigos gerados com T4 Templates e suporte a querys feitas usando LINQ.
Telerik ORM é a opção paga que promete muito suporte, com a promessa da facilidade (com Drag and Drop) e alta taxa de melhora de produtividade.


#MicroORMs#

É comum um MicroORM se vangloriar de ser mais rápido e performático do que um ORM completo. A justificativa está na sua simplicidade e o modo direto, sem intermediários, de acesso ao SGDB relacional.

Dois exemplos de MicroORMs seriam o Drapper e o PetaPoco. O Drapper é adicionado ao projeto com somente um arquivo e possui 3 helpers. Já o PetaPoco trabalha com vários tipos de SGDBs, com geração de código com T4 Templates e possui mais helpers do que o Drapper.

A adoção de microORMs costuma ser em projetos muito simples ou que precisam de uma performace que não foi atingida com um ORM mais complexo.